__author__ = 'Сидоров Артем Андреевич'

# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.
equation = 'y = -12x + 11111140.2121'
equation = list(equation.split('='))
equation[1] = equation[1][0:equation[1].find('x')] + '*' + equation[1][equation[1].find('x'):]
x = 2.5
print(f'Координата X:{x} и Y:{eval(equation[1])}')
# вычислите и выведите y


# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
date = '01.11.1985'

# Примеры некорректных дат
date = '01.22.1001'
date = '1.12.1001'
date = '-2.10.3001'

months31 = [1, 3, 5, 7, 8, 10, 12]
months30 = [4, 6, 9, 11]
def valid(day, month, year):
    if len(year) == 4 and 1 <= int(year) <= 9999:
        if int(month) in months30 and len(month) == 2 and 1 <= int(day) <= 30 and len(day) == 2:
            print('Верная дата')
        elif int(month) in months31 and len(month) == 2 and 1 <= int(day) <= 31 and len(day) == 2:
            print('Верная дата')
        elif int(month) == 2:
            if int(year) % 4 != 0 or (int(year) % 100 == 0 and int(year) % 400 != 0):
                if int(day) > 28:
                    print('Неверная дата')
                elif int(day) <= 28:
                    print('Верная дата')
            else :
                    if int(day) > 29:
                        print('Неверная дата')
                    elif int(day) <= 29:
                        print('Верная дата')
        else: 
            print('Неверная дата')
    else:
        print('Неверная дата')
date = '31.05.16000'
date = date.split('.')
valid(date[0], date[1], date[2])

# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты, 
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3
block = 1 #Задаем сторону блока
stage = 0 #Счетчик общего количества этажей
rooms = 0 # Счетчик общего числа комнат
n = int(input())
if 1 <= n <= 2e+9:
    while True:
        stage += block #Увеличиваем число этажей поблочно на каждой итерации
        rooms += block * block #Увеличиваем число комнат на блок на каждой итерации
        if rooms >= n: #Проверяем условие завершения цикла
            stage_number = stage - (rooms - n) // block 
            '''Заводим номер этажа конкретной комнаты
            как расстояние от последней комнаты башни до текущей комнаты с учетом количкества комнат
            на этаже
            '''
            number = (n - (rooms - block * block)) % block
            '''Заводим счетчик порядковых номеров комнат, как число комнат с конца предыдущего блокадо заданной комнаты с 
            учетом размера блока
            '''
            if number == 0:
                number = block
            '''
            делаем проверку порядковых номеров комнат и меняем значение последней комнаты в блоке
            '''
            break
        block += 1
    print(f'№ комнаты: {n}, Этаж: {stage_number}, Порядковый номер комнаты: {number}')
else:
    print('Такой комнаты не существует')